<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="12" passed="6" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-13T12:24:49 IST" name="Suite" finished-at="2022-12-13T12:24:49 IST" duration-ms="158">
    <groups>
    </groups>
    <test started-at="2022-12-13T12:24:49 IST" name="LoginTest" finished-at="2022-12-13T12:24:49 IST" duration-ms="57">
      <class name="grouping.LoginGroup">
        <test-method signature="LoginWithValidCredentials()[pri:0, instance:grouping.LoginGroup@63376bed]" started-at="2022-12-13T12:24:49 IST" name="LoginWithValidCredentials" finished-at="2022-12-13T12:24:49 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithValidCredentials -->
        <test-method signature="LoginWithInValidCredentials()[pri:0, instance:grouping.LoginGroup@63376bed]" started-at="2022-12-13T12:24:49 IST" name="LoginWithInValidCredentials" finished-at="2022-12-13T12:24:49 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginWithInValidCredentials -->
      </class> <!-- grouping.LoginGroup -->
    </test> <!-- LoginTest -->
    <test started-at="2022-12-13T12:24:49 IST" name="RegisterTest" finished-at="2022-12-13T12:24:49 IST" duration-ms="6">
      <class name="grouping.Register">
        <test-method signature="registerByProvidingOnlyMandatoryFields()[pri:0, instance:grouping.Register@57a78e3]" started-at="2022-12-13T12:24:49 IST" name="registerByProvidingOnlyMandatoryFields" finished-at="2022-12-13T12:24:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerByProvidingOnlyMandatoryFields -->
        <test-method signature="registerByProvidingDuplicateEmailAddress()[pri:0, instance:grouping.Register@57a78e3]" started-at="2022-12-13T12:24:49 IST" name="registerByProvidingDuplicateEmailAddress" finished-at="2022-12-13T12:24:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerByProvidingDuplicateEmailAddress -->
      </class> <!-- grouping.Register -->
    </test> <!-- RegisterTest -->
    <test started-at="2022-12-13T12:24:49 IST" name="SearchTest" finished-at="2022-12-13T12:24:49 IST" duration-ms="8">
      <class name="grouping.Search">
        <test-method signature="searchWithValidProduct()[pri:0, instance:grouping.Search@7ce026d3]" started-at="2022-12-13T12:24:49 IST" name="searchWithValidProduct" finished-at="2022-12-13T12:24:49 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithValidProduct -->
        <test-method signature="searchWithOutAnySearchItem()[pri:0, instance:grouping.Search@7ce026d3]" started-at="2022-12-13T12:24:49 IST" name="searchWithOutAnySearchItem" finished-at="2022-12-13T12:24:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithOutAnySearchItem -->
      </class> <!-- grouping.Search -->
    </test> <!-- SearchTest -->
  </suite> <!-- Suite -->
</testng-results>
