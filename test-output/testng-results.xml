<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-15T12:53:25 IST" name="Suite" finished-at="2022-12-15T12:53:26 IST" duration-ms="157">
    <groups>
      <group name="all">
        <method signature="Register.registerByProvidingOnlyMandatoryFields()[pri:1, instance:grouping.Register@3646a422]" name="registerByProvidingOnlyMandatoryFields" class="grouping.Register"/>
        <method signature="Register.registerByProvidingAllFields()[pri:2, instance:grouping.Register@3646a422]" name="registerByProvidingAllFields" class="grouping.Register"/>
        <method signature="Register.registerByNotProvidingAnyFields()[pri:3, instance:grouping.Register@3646a422]" name="registerByNotProvidingAnyFields" class="grouping.Register"/>
        <method signature="Register.registerByProvidingDuplicateEmailAddress()[pri:4, instance:grouping.Register@3646a422]" name="registerByProvidingDuplicateEmailAddress" class="grouping.Register"/>
      </group> <!-- all -->
      <group name="regression">
        <method signature="Register.registerByProvidingOnlyMandatoryFields()[pri:1, instance:grouping.Register@3646a422]" name="registerByProvidingOnlyMandatoryFields" class="grouping.Register"/>
        <method signature="Register.registerByProvidingAllFields()[pri:2, instance:grouping.Register@3646a422]" name="registerByProvidingAllFields" class="grouping.Register"/>
        <method signature="Register.registerByNotProvidingAnyFields()[pri:3, instance:grouping.Register@3646a422]" name="registerByNotProvidingAnyFields" class="grouping.Register"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="Register.registerByProvidingOnlyMandatoryFields()[pri:1, instance:grouping.Register@3646a422]" name="registerByProvidingOnlyMandatoryFields" class="grouping.Register"/>
        <method signature="Register.registerByProvidingDuplicateEmailAddress()[pri:4, instance:grouping.Register@3646a422]" name="registerByProvidingDuplicateEmailAddress" class="grouping.Register"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="Register.registerByProvidingOnlyMandatoryFields()[pri:1, instance:grouping.Register@3646a422]" name="registerByProvidingOnlyMandatoryFields" class="grouping.Register"/>
        <method signature="Register.registerByProvidingAllFields()[pri:2, instance:grouping.Register@3646a422]" name="registerByProvidingAllFields" class="grouping.Register"/>
        <method signature="Register.registerByNotProvidingAnyFields()[pri:3, instance:grouping.Register@3646a422]" name="registerByNotProvidingAnyFields" class="grouping.Register"/>
      </group> <!-- sanity -->
      <group name="register">
        <method signature="Register.registerByProvidingOnlyMandatoryFields()[pri:1, instance:grouping.Register@3646a422]" name="registerByProvidingOnlyMandatoryFields" class="grouping.Register"/>
        <method signature="Register.registerByProvidingAllFields()[pri:2, instance:grouping.Register@3646a422]" name="registerByProvidingAllFields" class="grouping.Register"/>
        <method signature="Register.registerByNotProvidingAnyFields()[pri:3, instance:grouping.Register@3646a422]" name="registerByNotProvidingAnyFields" class="grouping.Register"/>
        <method signature="Register.registerByProvidingDuplicateEmailAddress()[pri:4, instance:grouping.Register@3646a422]" name="registerByProvidingDuplicateEmailAddress" class="grouping.Register"/>
      </group> <!-- register -->
    </groups>
    <test started-at="2022-12-15T12:53:25 IST" name="RegisterTest" finished-at="2022-12-15T12:53:26 IST" duration-ms="157">
      <class name="grouping.Register">
        <test-method signature="registerByProvidingOnlyMandatoryFields()[pri:1, instance:grouping.Register@3646a422]" started-at="2022-12-15T12:53:25 IST" name="registerByProvidingOnlyMandatoryFields" finished-at="2022-12-15T12:53:25 IST" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerByProvidingOnlyMandatoryFields -->
        <test-method signature="registerByProvidingAllFields()[pri:2, instance:grouping.Register@3646a422]" started-at="2022-12-15T12:53:26 IST" name="registerByProvidingAllFields" finished-at="2022-12-15T12:53:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerByProvidingAllFields -->
        <test-method signature="registerByNotProvidingAnyFields()[pri:3, instance:grouping.Register@3646a422]" started-at="2022-12-15T12:53:26 IST" name="registerByNotProvidingAnyFields" finished-at="2022-12-15T12:53:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerByNotProvidingAnyFields -->
        <test-method signature="registerByProvidingDuplicateEmailAddress()[pri:4, instance:grouping.Register@3646a422]" started-at="2022-12-15T12:53:26 IST" name="registerByProvidingDuplicateEmailAddress" finished-at="2022-12-15T12:53:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerByProvidingDuplicateEmailAddress -->
      </class> <!-- grouping.Register -->
    </test> <!-- RegisterTest -->
  </suite> <!-- Suite -->
</testng-results>
